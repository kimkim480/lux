// skip
constellation main

Refraction Point Facet {
  x Light
  y Light
}

Refraction fn_return Function([[Light]], Light)

fn Prism() {
  
  fn x() -> fn_return {
    let xs: [Light] = [1, 0];
    fn inner(xs: [Light]) -> Light {
      return xs[0];
    }

    inner();
  }

  let p: Point = Point { x: 1, y: 2 };
  let x: Light = p.x;

  let y: Light = 1 + 1;

  emit p;
  emit p.x;
  emit p.y;
}