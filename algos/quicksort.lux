constellation main

fn quicksort(xs: [Light], low: Light, high: Light) -> Umbra {
  if (low < high) {
    let p: Light = partition(xs, low, high);
    quicksort(xs, low, p - 1);
    quicksort(xs, p + 1, high);
  }
}

fn partition(xs: [Light], low: Light, high: Light) -> Light {
  let pivot: Light = xs[high];
  let i: Light = low - 1;

  for (let j: Light = low; j < high; j += 1) {
    if (xs[j] <= pivot) {
      i += 1;
      // swap xs[i] and xs[j]
      let temp: Light = xs[i];
      xs[i] = xs[j];
      xs[j] = temp;
    }
  }
  // final swap
  let temp: Light = xs[i + 1];
  xs[i + 1] = xs[high];
  xs[high] = temp;

  return i + 1;
}

fn Prism() {
  let arr: [Light] = [
    388, 140, 240, 903, 279, 759, 915, 801, 616, 918,
    942, 272, 145, 202, 159, 400, 822, 955, 548, 110,
    515, 516, 245, 646, 909, 402, 987, 275, 310, 446,
    367, 484, 739, 975, 894, 793, 791, 434, 568, 994,
    640, 907, 560, 316, 410, 73, 618, 22, 322, 856,
    472, 233, 396, 97, 685, 635, 77, 895, 546, 73,
    845, 594, 55, 658, 724, 903, 616, 856, 430, 809,
    267, 920, 234, 973, 927, 688, 884, 789, 243, 579,
    289, 100, 534, 202, 700, 193, 411, 746, 732, 509,
    124, 175, 246, 951, 409, 610, 208, 514, 588, 120
  ];

  quicksort(arr, 0, 99);

  emit arr;
}
